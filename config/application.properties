#Bridge related settings
bridge.id=my-bridge
# uncomment one the following lines (bridge.tracing) to enable Jaeger tracing, check the documentation how to configure the tracer
# OpenTracing support
#bridge.tracing=jaeger
# OpenTelemetry support
#bridge.tracing=opentelemetry

#Apache Kafka common
kafka.bootstrap.servers=localhost:9092

#Apache Kafka producer
kafka.producer.acks=1

#Apache Kafka consumer
kafka.consumer.auto.offset.reset=earliest

#HTTP related settings
http.host=0.0.0.0
http.port=8080
#Enable CORS
http.cors.enabled=false
http.cors.allowedOrigins=*
http.cors.allowedMethods=GET,POST,PUT,DELETE,OPTIONS,PATCH

#Enable consumer
http.consumer.enabled=true

#Enable producer
http.producer.enabled=true

#Quarkus related configuration
quarkus.application.name=strimzi-kafka-bridge

#OpenTelemetry support
#WARNING: don't change this following configuration. It's done so that you can rely on the usual way to configure
#         OpenTelemetry by setting OTEL_SERVICE_NAME and OTEL_EXPORTER_OTLP_ENDPOINT environment variables
#using OTEL_SERVICE_NAME as usual or a preformatted service name based on the bridge.id
quarkus.opentelemetry.tracer.resource-attributes=service.name=${OTEL_SERVICE_NAME:strimzi-kafka-bridge-${bridge.id}}
#if the OTEL_EXPORTER_OTLP_ENDPOINT, it's using http://localhost:4317 by default
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT}