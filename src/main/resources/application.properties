#Quarkus related configuration
quarkus.application.name=strimzi-kafka-bridge

#WARNING: don't change this following configuration.

#OpenTelemetry support
#It's done so that you can rely on the usual way to configure OpenTelemetry by setting OTEL_SERVICE_NAME and OTEL_EXPORTER_OTLP_ENDPOINT environment variables
#using OTEL_SERVICE_NAME as usual or a preformatted service name based on the bridge.id
quarkus.otel.resource.attributes=service.name=${OTEL_SERVICE_NAME:strimzi-kafka-bridge-${bridge.id}}
#if the OTEL_EXPORTER_OTLP_ENDPOINT, it's using http://localhost:4317 by default
quarkus.otel.exporter.otlp.traces.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT}

#This property is required to allow scheduling the periodic task programmatically(i.e. inactive consumers check)
quarkus.scheduler.start-mode=forced

#This property is required to set the predefined headers
quarkus.http.cors.headers=x-requested-with,x-forwarded-proto,x-forwarded-host,access-control-allow-origin,access-control-allow-methods,origin,content-type,content-length,accept